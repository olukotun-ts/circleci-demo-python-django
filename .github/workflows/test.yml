name: tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    # container: python:3.9.9
    timeout-minutes: 20
    services:
      postgres:
        image: postgres:12.9
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: db_user
          POSTGRES_PASSWORD: db_password
        ports:
          - 5534:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 3s
          --health-timeout 3s
          --health-retries 15
      rethinkdb-backend:
        image: rethinkdb:2.4.0
        ports:
          - 5555:28015
      rethinkdb-frontend:
        image: rethinkdb:2.4.0
        ports:
          - 5550:28015
      influxdb:
        image: influxdb:1.8-alpine
        ports:
          - 8086:8086
      elasticsearch:
        image: elasticsearch:7.12.1
        ports:
          - 9222:9200
        options: -e="discovery.type=single-node" -e="ES_JAVA_OPTS=-Xms256m -Xmx256m"
    steps:
      - name: Set up Python 3.9.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9.9
          architecture: x86
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache dependencies
        id: dependency-cache
        uses: actions/cache@v2
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ hashFiles('setup.py') }}
      - name: Install dependencies
        if: steps.dependency-cache.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install "setuptools==57.4.0"
          python -m pip install --upgrade wheel
          pip install --use-feature=2020-resolver -e ".[dev]"
          # python -m spacy download en_core_web_sm
      - name: Check Postgres connection
        env:
          DISABLE_PSQL_SSL: true
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          psql postgresql://db_user:db_password@0.0.0.0:5534/test_db < .circleci/test-db/schema.sql
