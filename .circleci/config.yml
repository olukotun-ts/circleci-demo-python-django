version: 2.1

commands:
  install-dependencies:
    steps:
      - restore_cache:
          key: venv-${{ arch }}-${{ .Branch }}-${{ checksum "setup.py" }}
      - run: python --version
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            source venv/bin/activate
            python -m pip install --upgrade pip
            python -m pip install "setuptools==57.4.0"
            python -m pip install --upgrade wheel
            pip install --use-feature=2020-resolver -e ".[dev]"
            pip install -U spacy
            python -m spacy download en_core_web_sm
      - save_cache:
          key: venv-${{ arch }}-${{ .Branch }}-${{ checksum "setup.py" }}
          paths:
            - venv
jobs:
  docker-compose:
    docker:
      - image: cimg/base:stable
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Test Postgres connection
          environment:
            DISABLE_PSQL_SSL: true
            SL_BASE: ..
          command: |
            docker-compose up -d
            docker-compose run tester sudo apt-get update && \
              sudo apt-get install -y postgresql-client && \
              psql postgresql://test:test@localhost:5534/sl_pg < .circleci/test-db/schema.sql
      - run:
          name: Install dependencies
          command: |
            docker-compose run tester python -m venv venv && \
              source venv/bin/activate && \
              python -m pip install --upgrade pip && \
              python -m pip install "setuptools==57.4.0" && \
              python -m pip install --upgrade wheel && \
              pip install --use-feature=2020-resolver -e ".[dev]" && \
              pip install -U spacy && \
              python -m spacy download en_core_web_sm
  service-images:
    docker:
      - image: cimg/python:3.9.9
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
      - image: cimg/postgres:12.9
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_DB: sl_pg
          POSTGRES_HOST: localhost
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          PGPORT: 5534
      - image: rethinkdb:2.4.0
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        name: rethinkdb-backend
        environment:
          driver.port: 5555
      - image: rethinkdb:2.4.0
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        name: rethinkdb-frontend
        environment:
          driver.port: 5550
      - image: influxdb:1.8-alpine
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          INFLUXDB_HTTP_BIND_ADDRESS: 8086
      - image: elasticsearch:7.17.0
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms256m -Xmx256m"
          http.port: 9222
    steps:
      - checkout
      - run:
          name: Test Postgres connection
          environment:
            DISABLE_PSQL_SSL: true
            SL_BASE: ..
          command: |
            sudo apt-get update
            sudo apt-get install -y postgresql-client
            psql postgresql://test:test@localhost:5534/sl_pg < .circleci/test-db/schema.sql
      - install-dependencies
  machine-test:
    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true
    steps:
      - checkout
      - run: 
          name: Set Python version
          command: |
            python --version
            pyenv versions
            pyenv install 3.9.9
            pyenv global 3.9.9
      - run: python --version
      - install-dependencies
      - test-compose

workflows:
  version: 2
  run-tests:
    jobs:
      - docker-compose
      - service-images
      